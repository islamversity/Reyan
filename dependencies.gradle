ext {
    libs = [
            testing = [
                    //testing
                    junit = "junit:junit:${Versions.junit}",
                    truth = "com.google.truth:truth:${Versions.truth}",

                    mockkUnit = "io.mockk:mockk:${Versions.mockk}",
                    mockkAndroid = "io.mockk:mockk-android:${Versions.mockk}",

                    coroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutines}",

                    supportTestRunner = "androidx.test:runner:${Versions.androidXTest}",
                    supportTestCore = "androidx.test:core:${Versions.androidXTest}",
                    supportTestRule = "androidx.test:rules:${Versions.androidXTest}",
                    supportJunitExt = "androidx.test.ext:junit:${Versions.supportJunitExt}",
                    supportCore = "androidx.test:core:${Versions.androidXTest}",

                    espressoCore = "androidx.test.espresso:espresso-core:${Versions.espresso}",
                    espressoIntents = "androidx.test.espresso:espresso-intents:${Versions.espresso}",
                    espressoContrib = "androidx.test.espresso:espresso-contrib:${Versions.espresso}",

                    jsonTest = "org.json:json:20140107",

                    robolectric = "org.robolectric:robolectric:${Versions.robolectric}"
            ],

            kotlin = [
                    //kotlin
                    kotlinStd7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}",
                    kotlinStd8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}",
                    coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}",
                    coroutinesCommon = "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${Versions.coroutines}",
                    coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutines}",
                    flowBinding = "ru.ldralighieri.corbind:corbind:${Versions.flowBinding}"
            ],

            support = [
                    //support
                    compat = "androidx.appcompat:appcompat:${Versions.androidSupport}",
                    supportLegacy = "androidx.legacy:legacy-support-v4:${Versions.androidSupport}",
                    androidxCore = "androidx.core:core:${Versions.androidSupport}",
                    design = "com.google.android.material:material:${Versions.googleMaterial}",
                    cardView = "androidx.cardview:cardview:${Versions.androidSupport}",
                    annotation = "androidx.annotation:annotation:${Versions.androidSupport}",
                    vectorDrawable = "androidx.vectordrawable:vectordrawable:${Versions.androidSupport}",
                    recyclerView = "androidx.recyclerview:recyclerview:${Versions.androidSupport}",
                    multiDex = "androidx.multidex:multidex:${Versions.multidex}",
                    constraintLayout = "androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
            ],

            archComponent = [
                    //architecture comps
                    lifecycleRuntime = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.androidArchComponent}",
                    viewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.androidArchComponent}",
                    liveData = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.androidArchComponent}"
            ],

            androidKts = [
                    //androidKTS
                    coreKts = "androidx.core:core-ktx:${Versions.androidKotlinExt}"
            ],

            firebase = [
                    firebaseCore = "com.google.firebase:firebase-core:17.0.1",
                    firebaseAnalytics = "com.google.firebase:firebase-analytics:17.0.1",
                    firebaseCrashlyticsSDK = "com.google.firebase:firebase-crashlytics:17.0.0",
                    firebaseMessaging = "com.google.firebase:firebase-messaging:19.0.1",
                    firebaseRemoteConfig = "com.google.firebase:firebase-config:18.0.0"
            ],

            network = [
                    //network
                    okHttp = "com.squareup.okhttp3:okhttp:${Versions.okHttp}",
                    mockWebServer = "com.squareup.okhttp3:mockwebserver:${Versions.okHttp}",
                    okHttpLogging = "com.squareup.okhttp3:logging-interceptor:${Versions.okHttp}"
            ],

            daggerLibs = [
                    //Dagger
                    dagger = "com.google.dagger:dagger:${Versions.dagger}",
                    daggerCompiler = "com.google.dagger:dagger-compiler:${Versions.dagger}",
                    findBugs = "com.google.code.findbugs:jsr305:${Versions.findBugs}"
            ],

            annotationLibs = [
                    javaxAnnotation = "javax.annotation:jsr250-api:1.0",
                    injectAnnotation = "javax.inject:javax.inject:1",
                    jetbrainsAnnotation = "org.jetbrains:annotations:${Versions.jetBrainsAnnotation}"
            ],

            utils = [
                    //Utils
                    timber = "com.jakewharton.timber:timber:${Versions.timber}",
                    fresco = "com.facebook.fresco:fresco:${Versions.fresco}",
                    frescoOkHttp = "com.facebook.fresco:imagepipeline-okhttp3:${Versions.fresco}",
                    conductor = "com.bluelinelabs:conductor:${Versions.conductor}",
                    leakCanary = "com.squareup.leakcanary:leakcanary-android:${Versions.leakCanary}",
                    epoxy = "com.airbnb.android:epoxy:${Versions.epoxy}",
                    epoxyCompiler = "com.airbnb.android:epoxy-processor:${Versions.epoxy}",
                    slider = "com.github.worldsnas:slider:1.0.3",
                    flipper = "com.facebook.flipper:flipper:${Versions.flipper}",
                    flipperNoOp = "com.facebook.flipper:flipper-noop:${Versions.flipper}",
                    flipperNetworkPlugin = "com.facebook.flipper:flipper-network-plugin:${Versions.flipper}",
                    flipperFrescoPlugin = "com.facebook.flipper:flipper-fresco-plugin:${Versions.flipper}",
                    chucker = "com.github.ChuckerTeam.Chucker:library:${Versions.chucker}",
                    chuckerNoop = "com.github.ChuckerTeam.Chucker:library-no-op:${Versions.chucker}",
                    soLoader = "com.facebook.soloader:soloader:${Versions.soLoader}",
                    stetho = "com.facebook.stetho:stetho:${Versions.stetho}"
            ],

            databse = [
                    sqlDelightAndroidAdapter = "com.squareup.sqldelight:android-driver:${Versions.sqlDelight}",
                    sqlDelightRuntime = "com.squareup.sqldelight:runtime-jvm:${Versions.sqlDelight}",
                    sqlDelightCoroutines = "com.squareup.sqldelight:coroutines-extensions:${Versions.sqlDelight}",
                    sqlDelightJVM = "com.squareup.sqldelight:sqlite-driver:${Versions.sqlDelight}"
            ],

            modules = [
                    appModule = ":app",
                    kotlinTestHelper = ":kotlintesthelpers",
                    domain = ":domain",
                    daggerCore = ":daggercore",
                    base = ":base",
                    core = ":core",
                    navigation = ":navigation",
                    home = ":home",
                    db = ":db",
                    viewComponent = ":view-component",
                    search = ":search"
            ],
            ktor = [
                    androidSerialization = "io.ktor:ktor-client-serialization-jvm:${Versions.ktor}",
                    okhttpEngine = "io.ktor:ktor-client-okhttp:${Versions.ktor}"
            ]
    ]
}
